name: Build and Push Helm Chart
on:
  workflow_call:
    inputs:
      chart_dir:
        required: true
        type: string
      chart_tag:
        required: false
        type: string
      chart_overwrite:
        required: true
        type: boolean
      is_lib_chart:
        required: false
        type: boolean
        default: false
      # chart_name Deprecated
      chart_name:
        required: false
        type: string
      pre_build_script:
        required: false
        type: string
      git_branch:
        required: false
        type: string
        default: ''
jobs:
  helm-chart-release:
    runs-on: ubuntu-latest
    env:
      REGISTRY: registry.hub.docker.com
      CHART_TAG: ${{ inputs.chart_tag }}
      HELM_TEMPLATE: template.yaml
      DOCKER_HUB_USER: owolabialiu
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ inputs.git_branch }}
      - name: Debug file structure
        run: |
          ls -la ./.github/workflows/charts
          ls -la ./.github/workflows/charts/agent-flows
          ls -la ./.github/workflows/charts/gpt-search
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: owolabialiu
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
      - name: Login to Helm Registry
        run: echo ${{ secrets.DOCKER_HUB_TOKEN }} | helm registry login registry.hub.docker.com --username owolabialiu --password-stdin
        env:
          REGISTRY: registry.hub.docker.com
      - name: Run Pre-Build User-defined script
        run: bash -c '${{ inputs.pre_build_script }}'
      - name: Generate Docs
        continue-on-error: true
        if: ${{ github.event_name == 'push' || github.event_name == 'pull_request' }}
        uses: docker://jnorwood/helm-docs:v1.11.0
        with:
          entrypoint: helm-docs
          args: --chart-dir ${{ inputs.chart_dir }}
      - name: Install Dependencies
        run: helm dep build ${{ inputs.chart_dir }} --skip-refresh
      - name: Helm Lint
        run: helm lint ${{ inputs.chart_dir }}
      - name: Generate template.yaml
        if: ${{ !inputs.is_lib_chart }}
        run: helm template ${{ inputs.chart_dir }} > ${{ inputs.chart_dir }}/$HELM_TEMPLATE && cat ${{ inputs.chart_dir }}/$HELM_TEMPLATE
      - name: KubeVal Kubernetes Objects
        if: ${{ !inputs.is_lib_chart }}
        run: >
          docker run --rm -v $(pwd)/${{ inputs.chart_dir }}:/data
          cytopia/kubeval
          $HELM_TEMPLATE
          --output=stdout
          --strict
          --ignore-missing-schemas
      - run: rm -f $HELM_TEMPLATE
        if: ${{ !inputs.is_lib_chart }}
      - name: Get Chart Name from Chart.yaml
        run: echo "CHART_NAME=$(yq eval .name ${{ inputs.chart_dir }}/Chart.yaml)" >> $GITHUB_ENV
      - name: Get Chart Tag/version from Chart.yaml if not inputted
        if: ${{ inputs.chart_tag == '' }}
        run: echo "CHART_TAG=$(yq eval .version ${{ inputs.chart_dir }}/Chart.yaml)" >> $GITHUB_ENV
      - name: Chart Registry Overwrite Protection
        if: ${{ inputs.chart_overwrite == false }}
        run: '! $(helm pull oci://$REGISTRY/chart/$CHART_NAME --version $CHART_TAG)'
      - name: Release Helm Chart to GHCR
        uses: appany/helm-oci-chart-releaser@v0.4.0
        with:
          name: ${{ env.CHART_NAME }}
          repository: "chart"
          tag: ${{ env.CHART_TAG }}
          path: ${{ inputs.chart_dir }}
          registry: ${{ env.REGISTRY }}
          registry_username: owolabialiu
          registry_password: ${{ secrets.DOCKER_HUB_TOKEN }}

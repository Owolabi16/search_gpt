name: Build and Run Tests
on:
  workflow_dispatch:
  push:
    tags:
      - "v*.*.*"
    branches:
      - main
  pull_request:
    types:
      - opened
      - synchronize

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # You can't use a matrix directly with a reusable workflow call
  # Each matrix item needs its own job
  gpt-version:
    name: Get GPT Chart Version
    uses: ./.github/workflows/get-chart-version-info.yaml
    secrets: inherit
    with:
      chart_dir: ./.github/workflows/charts/gpt-search
      chart_overwrite: false
  
  agent-flows-version:
    name: Get Agent Flows Chart Version
    uses: ./.github/workflows/get-chart-version-info.yaml
    secrets: inherit
    with:
      chart_dir: ./.github/workflows/charts/agent-flows
      chart_overwrite: false
  # python-linter:
  #   uses: occasio-technology-solutions/infra/.github/workflows/python-linter.yaml@development
  #   secrets:
  #     repo_token: "${{ secrets.GHA_BOT_REPO_TOKEN }}"

  build-gpt-image:
    needs: 'gpt-version'
    uses: ./.github/workflows/build-image.yaml
    with:
      docker-arch: linux/arm64
      # custom-image-tag: ${{ needs.gpt-version.outputs.app-image-tag-version }}
    secrets:
      docker-build-secrets: "github_pat=${{ secrets.GHA_BOT_REPO_TOKEN }}"
      DOCKER_HUB_TOKEN: "${{ secrets.DOCKER_HUB_TOKEN }}"
      # PAT_TOKEN: ${{ secrets.PAT_TOKEN }}
  
  build-agent-flows-image:
    needs: 'agent-flows-version'
    uses: ./.github/workflows/build-image.yaml
    with:
      docker-arch: linux/arm64
      # dockerfile-path: "./Dockerfile.agentflows"
      # custom-image-name: agent-flows
      # custom-image-tag: ${{ needs.agent-flows-version.outputs.app-image-tag-version }}
    secrets:
      docker-build-secrets: "github_pat=${{ secrets.GHA_BOT_REPO_TOKEN }}"
      DOCKER_HUB_TOKEN: "${{ secrets.DOCKER_HUB_TOKEN }}"
      # PAT_TOKEN: ${{ secrets.PAT_TOKEN }}
      
  build-migrate-vector-image:
    needs: 'gpt-version'
    uses: ./.github/workflows/build-image.yaml
    with:
      docker-arch: linux/arm64
      # build-target: "migration"
      # custom-image-tag: ${{ needs.gpt-version.outputs.app-image-tag-version }}
    secrets:
      docker-build-secrets: "github_pat=${{ secrets.GHA_BOT_REPO_TOKEN }}"
      DOCKER_HUB_TOKEN: "${{ secrets.DOCKER_HUB_TOKEN }}"
      # PAT_TOKEN: ${{ secrets.PAT_TOKEN }}      
      
  build-migrate-agent-image:
    needs: 'agent-flows-version'
    uses: ./.github/workflows/build-image.yaml
    with:
      docker-arch: linux/arm64
      # build-target: "migration"
      # dockerfile-path: "./Dockerfile.agentflows"
      # custom-image-name: agent-flows
      # custom-image-tag: ${{ needs.agent-flows-version.outputs.app-image-tag-version }}
    secrets:
      docker-build-secrets: "github_pat=${{ secrets.GHA_BOT_REPO_TOKEN }}"
      DOCKER_HUB_TOKEN: "${{ secrets.DOCKER_HUB_TOKEN }}"
      # PAT_TOKEN: ${{ secrets.PAT_TOKEN }}      

  docker-tests:
    name: Run Tests using Docker Image
    runs-on: occasio-runner-fleet
    needs: build-gpt-image
    timeout-minutes: 5
    env:
      DOCKER_REPO: ${{ needs.build-gpt-image.outputs.docker-repo }}
      DOCKER_TAG: ${{ needs.build-gpt-image.outputs.docker-tag }}
      DOCKER_TEST_IMAGE_TAG: gpt-search-test
    steps:
      - name: Login to GHCR
        uses: docker/login-action@v2
        with:
          registry: hub.docker.com
          username: ${{ github.actor }}
          password: ${{ github.token }}
      - name: Check out code
        uses: actions/checkout@v3
      - name: Build Test Image
        run: >
          docker build
          --build-arg IMAGE=$DOCKER_REPO:$DOCKER_TAG
          -f Dockerfile.test
          -t $DOCKER_TEST_IMAGE_TAG .
      - name: Execute Pytest
        run: |
          set -o pipefail
          docker run -v /tmp:/tmp $DOCKER_TEST_IMAGE_TAG pytest \
            --cov-report=term-missing \
            --junitxml=/tmp/pytest.xml \
            --cov=gpt_search | tee /tmp/pytest-coverage.txt
      - name: Pytest coverage comment
        if: always()
        uses: MishaKav/pytest-coverage-comment@main
        with:
          pytest-coverage-path: /tmp/pytest-coverage.txt
          junitxml-path: /tmp/pytest.xml
